apiVersion: "sparkoperator.k8s.io/v1beta1"
kind: SparkApplication
metadata:
  name: hmda-spark-aggregate
  namespace: default
spec:
  type: Scala
  mode: cluster
  sparkConf:
    "spark.streaming.receiver.maxRate": "1"
    "spark.streaming.receiver.maxRate": "1"
    "spark.streaming.backpressure.initialRate": "1"
    "spark.streaming.backpressure.enabled": "true"
  image: "hmda/hmda-spark-reporting:a_d_2020_all_except_last_3"
  imagePullPolicy: Always
  mainClass: com.hmda.reports.AggregateReports
  mainApplicationFile: "local:///opt/spark/cfpb/hmda/jars/hmda-spark-reporting.jar"
  sparkVersion: "2.4.0"
  restartPolicy:
    type: Never
#  volumes:
#    - name: "test-volume"
#      hostPath:
#        path: "/tmp"
#        type: Directory
  driver:
    cores: 2
    coreLimit: "4000m"
    memory: "9g"
    javaOptions: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    labels:
      version: 2.4.0
    serviceAccount: spark-operator-spark
    configMaps:
      - name: kafka-configmap
        path: /mnt/kafka-config-maps
    envSecretKeyRefs:
      JDBC_URL:
        name: inst-postgres-credentials
        key: url
      ACCESS_KEY:
        name: aws-credentials
        key: aws-access-key-id
      SECRET_KEY:
        name: aws-credentials
        key: aws-secret-access-key
      KAFKA_HOSTS:
        name: kafka-hosts
        key: kafka-hosts
      AWS_ENV:
        name: aws-env
        key: aws-env
    volumeMounts:
      - name: "test-volume"
        mountPath: "/tmp"
  executor:
    cores: 2
    instances: 1
    memory: "8g"
    javaOptions: "-XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"
    labels:
      version: 2.4.0
    configMaps:
      - name: kafka-configmap
        path: /mnt/kafka-config-maps
    envSecretKeyRefs:
      JDBC_URL:
        name: inst-postgres-credentials
        key: url
      ACCESS_KEY:
        name: aws-credentials
        key: aws-access-key-id
      SECRET_KEY:
        name: aws-credentials
        key: aws-secret-access-key
      KAFKA_HOSTS:
        name: kafka-hosts
        key: kafka-hosts
      AWS_ENV:
        name: aws-env
        key: aws-env
#    volumeMounts:
#      - name: "test-volume"
#        mountPath: "/tmp"
#    volumes:
#      - name: config-vol
#        configMap:
#          name: dummy-cm
